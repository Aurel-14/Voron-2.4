# This file contains common pin mappings for the BIGTREETECH Manta M8P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# MCU
#####################################################################

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_05002E000F504B4633373520-if00
#restart_method: command
##--------------------------------------------------------------------

#####################################################################
# INCLUDES
#####################################################################

# Mainsail configs
[include mainsail.cfg]

# Macro to test the maximum speed
[include Test_Speed.cfg]

# Max Flow test Macro
#[include max_flow_calibrate.cfg]

# RGW Neopixel Caselight
[include caselight.cfg]
#[include led_effects.cfg]

# Timelaspe
[include timelapse.cfg]

# THE_FILTER
#[include bedfans.cfg]
[include filter_savior.cfg]

# Klicky PCB
[include klicky-probe.cfg]

# For BBL HotEnd or low thermal inertia devices
#[include hotend_heater_ctrl.cfg]

# Adaptative Bed Mesh 
#[include adaptive_bed_mesh.cfg]

#input shapper portable (USB)
#[include pis.cfg]

##################################################################################################
# EXCLUDE OBJECT
##################################################################################################

[exclude_object]

#####################################################################
# GENERIC PARAMETERS
#####################################################################

[printer]
kinematics: corexy
max_velocity: 650  
max_accel: 8000    			#Max 4000
max_z_velocity: 10 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 50
square_corner_velocity: 5.0

#####################################################################
# TEMPERATURE
#####################################################################

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor SoC]
sensor_type: temperature_host

#####################################################################
# INPUT SHAPER
#####################################################################

[input_shaper]
shaper_freq_x: 62.8  # frequency for the X mark of the test model
shaper_type_x: mzv
shaper_freq_y: 49.6  # frequency for the y mark of the test model
shaper_type_y: mzv

### OLD ###
#shaper_freq_x: 72.2  # frequency for the X mark of the test model
#shaper_type_x: mzv
#shaper_freq_y: 52.4  # frequency for the y mark of the test model
#shaper_type_y: mzv

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

##--------------------------------------------------------------------
## X Stepper on Motor1(B Motor)
##--------------------------------------------------------------------
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
microsteps: 64
rotation_distance: 40
endstop_pin: ^PF3
position_min: 0
##--------------------------------
position_endstop: 250
position_max: 250
##--------------------------------
homing_speed: 80  #Max 100
homing_retract_dist: 5
homing_positive_dir: true
##--------------------------------
[tmc2209 stepper_x]
uart_pin: PC10
interpolate: false
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

##--------------------------------------------------------------------
## Y Stepper on Motor2 (A Motor)
##--------------------------------------------------------------------
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 64
rotation_distance: 40
endstop_pin: ^PF4
position_min: 0
##--------------------------------
position_endstop: 250
position_max: 251
##--------------------------------
homing_speed: 80  #Max 100
homing_retract_dist: 5
homing_positive_dir: true
##--------------------------------
[tmc2209 stepper_y]
uart_pin: PF13
interpolate: false
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

##--------------------------------------------------------------------
## Z0 Stepper - Front Left on MOTOR3_A
##--------------------------------------------------------------------
[stepper_z] # Motor 3
step_pin: PD7
dir_pin: PD6
enable_pin: !PF10
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: ^PF5
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0
#endstop_pin: probe:z_virtual_endstop
##--------------------------------
position_max: 240
##--------------------------------
position_min: -1.1
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 4
##--------------------------------
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##--------------------------------------------------------------------
##	Z1 Stepper - Rear Left on Motor4
##--------------------------------------------------------------------
[stepper_z1] # Motor 4
step_pin: PD3
dir_pin: !PD2
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##--------------------------------
[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##--------------------------------------------------------------------
##	Z2 Stepper - Rear Right on Motor5
##--------------------------------------------------------------------
[stepper_z2] # Motor 5
step_pin: PC9
dir_pin: PC8
enable_pin: !PD1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##--------------------------------
[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: false
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 999999

##--------------------------------------------------------------------
##	Z3 Stepper - Front Right on Motor6
##--------------------------------------------------------------------
[stepper_z3]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##--------------------------------
[tmc2209 stepper_z3]
uart_pin: PF8
interpolate: false
run_current: 0.8
#hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
# 	EXTRUDER(S)
#####################################################################

##--------------------------------------------------------------------
#	E0 on Motor7
##--------------------------------------------------------------------
[extruder]
step_pin: PD11
dir_pin: PD9
enable_pin: !PD15
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.4521616	#Bondtech 5mm Drive Gears # defaut : 22.6789511
gear_ratio: 50:10				#(BMG Gear Ratio)/(Nema 14)
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PE3
##	Validate the following thermistor type to make sure it is correct
#sensor_type: ATC Semitec 104GT-2
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Bambulab NTC # BBL Hot End calibrated
sensor_pin: PA1
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0 # define in slicer in material section
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on Motor7
[tmc2209 extruder]
uart_pin: PD14
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	TMC AUTOTUNE
#####################################################################
[autotune_tmc stepper_x]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_y]
motor: omc-17hs19-2004s1

[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z3]
motor: omc-17hs19-2004s1

#[autotune_tmc extruder]
motor: fysetc-g36hsy4405-6d-80a

#####################################################################
# 	FILAMENT MOTION SENSOR
#####################################################################

[filament_motion_sensor filament_sensor]
detection_length: 12.00 ; This can be adjusted to your desired level of sensitivity. 10 is a recomended value to prevent flow dropoff false triggers.
extruder: extruder
switch_pin: ^PC13
pause_on_runout: True ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
    M117 Runout Detected!
    PAUSE                ; Pause

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

#####################################################################
# Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PB5
#sensor_type: ATC Semitec 104GT-2
#sensor_type: NTC 100K beta 3950
sensor_type: Generic 3950 # for FermioLab Pad
sensor_pin: PA0
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# BBL HotEnd Heater
#####################################################################

[thermistor Bambulab NTC]
temperature1: 19.3
resistance1: 127800
temperature2: 153
resistance2: 1710
temperature3: 299.5
resistance3: 116.95

#####################################################################
# 	PROBE
#####################################################################

[probe]
##	This probe is not used for Z height, only Quad Gantry Leveling
##  NPN and PNP proximity switch types can be set by jumper
pin: PC0

x_offset: 0
y_offset: 19.75
z_offset: 6.3
speed: 5
samples:3 
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

#####################################################################
# 	BED MESH
#####################################################################

[bed_mesh]
speed: 100
horizontal_move_z: 10

mesh_min: 40, 40
mesh_max: 210,210

fade_start: 0.6
fade_end: 10.0
probe_count: 7,7 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
#relative_reference_index: 24 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)
zero_reference_position: 124.99, 124.99

#####################################################################
# 	QUAD GANTRY LEVELING
#####################################################################

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
#	Gantry Corners for 250mm Build
gantry_corners:
	-60,-10
	310, 320
#	Probe points
points:
	50,25
	50,175
	200,175
	200,25
	
#--------------------------------------------------------------------
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	FANS CONTROL
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PE6
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan
pin: PE0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

[heater_fan controller_fan_1]
##	Controller fan 1
pin: PC12
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.5

[heater_fan controller_fan_2]
##	Controller fan 2
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.5

[fan_generic filter]
#	Exhaust fan
pin: PE4
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
off_below: 0.49

#[heater_fan exhaust_fan]
##	Exhaust fan
#pin: PE4
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 50
#fan_speed: 1.0

#[heater_fan fan4]
#pin: PE4
#tachometer_pin: PC13

#[heater_fan fan5]
#pin: PB8
#tachometer_pin: PC14

#[heater_fan fan6]
#pin: PB9
#tachometer_pin: PC15

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PB5
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:180,250
#speed:100
#z_hop:10

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

###	Set RGB values on boot up for each Neopixel. 
###	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
#	LED Control
#####################################################################

[neopixel caselight]
pin: PB15
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 48  # 48 LED
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#####################################################################
# 	Macros
#####################################################################

#--------------------------------------------------------------------
# Start GCODE
#--------------------------------------------------------------------

[gcode_macro CALIBRATE_Z_OFFSET]
gcode:
    CALIBRATE_Z

[gcode_macro PURGE_AND_CLEAN_ABS]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                        ; home if not already homed
    {% endif %}
    G92 E0 ; Reset Extruder
    G1 X105.00 Y250.50 Z5.0 F5000.0 ; Move x and y to start purge position
    M109 S{240}
    G1 E25 F300                           ; Extrude 5mm
    G1 E-5.0 F3600                 ; retract filament
    CLEAN_NOZZLE
    M104 S{0}

[gcode_macro PURGE_AND_CLEAN_PLA]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                        ; home if not already homed
    {% endif %}
    G92 E0 ; Reset Extruder
    G1 X105.00 Y250.50 Z5.0 F5000.0 ; Move x and y to start purge position
    M109 S{190}
    G1 E25 F300                           ; Extrude 5mm
    G1 E-5.0 F3600                 ; retract filament
    CLEAN_NOZZLE
    M104 S{0}

#--------------------------------------------------------------------
# Start GCODE
#--------------------------------------------------------------------

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    CASELIGHT_HEATING            ; RGB LED HEATING MODE
    M190 S{BED_TEMP}
    G32                          ; home all axes
    #TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-1.5} MAXIMUM={EXTRUDER_TEMP+1.5}
    M109 S{EXTRUDER_TEMP}
    BED_MESH_PROFILE LOAD=Actual_Bedh_Mesh
    SFS_ENABLE                   ; Enable Filament motion sensor
    CLEAN_NOZZLE
    PRIME_NOZZLE
    CASELIGHT_ON

#--------------------------------------------------------------------
# HOME - QGL - Z OFFSET
#--------------------------------------------------------------------

[gcode_macro G32]
gcode:
    G90
    BED_MESH_CLEAR
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28 ; home if not already homed
    {% endif %}
    {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}
    {% if printer.z_calibration.last_query != True %}
      CALIBRATE_Z
    {% endif %}

#--------------------------------------------------------------------
# CLEAN_NOZZLE
#--------------------------------------------------------------------

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 105.0
variable_start_y: 250.5
variable_start_z: 4.2
variable_wipe_dist: -45
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 5

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

#--------------------------------------------------------------------
# PURGE LINE
#--------------------------------------------------------------------

[gcode_macro PRIME_NOZZLE]
gcode:
    G92 E0 ; Reset Extruder
    G1 X5.5 Y20 Z3.0 F5000.0 ; Move x and y to start position
    G1 Z0.3 F3000 ; Move Z Axis in start position
    G1 X5.5 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X5.9 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X5.9 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G1 X33.9 Y20 Z0.3 F8000.0 ; Move quick
    G1 Z1 ; Move up
    G92 E0 ; Reset Extruder

#--------------------------------------------------------------------
# End GCDOE
#--------------------------------------------------------------------

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    SFS_DISABLE ; Disable filament motion sensor
    CASELIGHT_OFF
    BED_MESH_CLEAR

#--------------------------------------------------------------------
# PAUSE AND RESUME
#--------------------------------------------------------------------

[gcode_macro M600]
gcode:
    PAUSE                ; Pause

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

#--------------------------------------------------------------------
# Force Move
#--------------------------------------------------------------------

[force_move]
enable_force_move: True

[gcode_macro ForceMove]
gcode:
    g90
    SET_KINEMATIC_POSITION Z=0

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 39.174
#*# pid_ki = 9.327
#*# pid_kd = 41.132
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.187
#*# pid_ki = 0.980
#*# pid_kd = 454.041
#*#
#*# [stepper_z]
#*# position_endstop = 1.212
#*#
#*# [bed_mesh default_old]
#*# version = 1
#*# points =
#*# 	0.043750, 0.018750, 0.010000, 0.037500, 0.042500, 0.045000, 0.038750
#*# 	0.025000, 0.001250, -0.003750, 0.013750, 0.030000, 0.010000, 0.011250
#*# 	0.038750, 0.012500, 0.003750, 0.030000, 0.008750, 0.016250, 0.011250
#*# 	0.031250, 0.013750, 0.020000, 0.000000, 0.023750, 0.026250, 0.011250
#*# 	0.030000, -0.006250, 0.011250, -0.005000, 0.021250, 0.020000, 0.005000
#*# 	0.050000, 0.017500, -0.016250, 0.008750, 0.026250, 0.010000, -0.003750
#*# 	0.088750, 0.035000, 0.021250, 0.068750, 0.056250, 0.046250, 0.013750
#*# min_x = 40.0
#*# max_x = 209.98
#*# min_y = 40.0
#*# max_y = 209.98
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh default_old_20230731]
#*# version = 1
#*# points =
#*# 	0.035000, -0.010000, -0.013750, 0.006250, 0.020000, 0.045000, 0.022500
#*# 	0.035000, -0.010000, -0.006250, 0.026250, 0.002500, 0.005000, 0.005000
#*# 	0.031250, 0.021250, -0.002500, 0.030000, 0.020000, 0.036250, 0.022500
#*# 	0.057500, 0.018750, 0.010000, 0.000000, 0.035000, 0.038750, 0.027500
#*# 	0.051250, -0.010000, -0.007500, 0.007500, 0.017500, 0.047500, 0.017500
#*# 	0.047500, 0.021250, -0.005000, 0.060000, 0.025000, 0.018750, 0.003750
#*# 	0.081250, 0.058750, 0.031250, 0.038750, 0.072500, 0.058750, 0.037500
#*# min_x = 40.0
#*# max_x = 209.98
#*# min_y = 40.0
#*# max_y = 209.98
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh default_old_20230903]
#*# version = 1
#*# points =
#*# 	0.021250, -0.012500, -0.013750, 0.013750, 0.035000, 0.021250, 0.042500
#*# 	0.025000, -0.007500, -0.006250, -0.003750, 0.008750, 0.017500, 0.007500
#*# 	0.023750, -0.005000, -0.012500, 0.008750, 0.028750, 0.018750, 0.021250
#*# 	0.036250, 0.012500, 0.002500, 0.000000, 0.018750, 0.028750, 0.031250
#*# 	0.055000, 0.017500, -0.010000, -0.008750, 0.015000, 0.010000, 0.016250
#*# 	0.061250, 0.016250, -0.001250, 0.022500, 0.013750, 0.030000, 0.015000
#*# 	0.082500, 0.056250, 0.022500, 0.041250, 0.060000, 0.061250, 0.040000
#*# min_x = 40.0
#*# max_x = 209.98
#*# min_y = 40.0
#*# max_y = 209.98
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh default_old_20230905]
#*# version = 1
#*# points =
#*# 	0.031250, 0.000000, -0.013750, 0.006250, 0.021250, 0.012500, -0.007500
#*# 	0.028750, -0.007500, -0.001250, -0.002500, -0.001250, -0.011250, -0.025000
#*# 	0.017500, 0.001250, -0.002500, 0.007500, 0.020000, 0.001250, -0.015000
#*# 	0.042500, 0.002500, -0.007500, 0.000000, 0.006250, 0.016250, -0.007500
#*# 	0.030000, -0.016250, -0.011250, -0.018750, -0.007500, -0.005000, -0.016250
#*# 	0.016250, -0.013750, -0.010000, -0.008750, 0.003750, 0.013750, 0.001250
#*# 	0.032500, 0.011250, 0.006250, 0.023750, 0.031250, 0.038750, 0.021250
#*# min_x = 40.0
#*# max_x = 209.98
#*# min_y = 40.0
#*# max_y = 209.98
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh Actual_Bedh_Mesh]
#*# version = 1
#*# points =
#*# 	0.015000, -0.013750, -0.022500, -0.006250, 0.010000, 0.007500, 0.000000
#*# 	0.036250, -0.008750, -0.010000, 0.007500, 0.005000, 0.002500, -0.003750
#*# 	0.037500, -0.006250, -0.002500, 0.008750, 0.017500, 0.008750, 0.000000
#*# 	0.030000, -0.000000, -0.005000, 0.000000, 0.016250, 0.018750, 0.007500
#*# 	0.037500, -0.006250, -0.016250, -0.005000, 0.007500, 0.021250, -0.006250
#*# 	0.027500, 0.015000, -0.017500, 0.005000, 0.022500, 0.030000, -0.006250
#*# 	0.063750, 0.030000, 0.035000, 0.043750, 0.052500, 0.057500, 0.026250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 209.98
#*# min_y = 40.0
#*# max_y = 209.98
